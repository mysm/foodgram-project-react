# Generated by Django 4.1.3 on 2022-12-11 11:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("recipes", "0003_ingredient_ingredient_unique_name_measurement"),
    ]

    operations = [
        migrations.CreateModel(
            name="AmountIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Нужно хоть какое-то количество."
                            ),
                            django.core.validators.MaxValueValidator(
                                10000, "Слишком много!"
                            ),
                        ],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "ingredients",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe",
                        to="recipes.ingredient",
                        verbose_name="Связанные ингредиенты",
                    ),
                ),
            ],
            options={
                "verbose_name": "ингредиент",
                "verbose_name_plural": "Количество ингредиентов",
                "ordering": ("recipe",),
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название блюда"),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата публикации"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="recipe_images/", verbose_name="Изображение блюда"
                    ),
                ),
                (
                    "text",
                    models.TextField(max_length=255, verbose_name="Описание блюда"),
                ),
                (
                    "cooking_time",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Минимум одна минута!"
                            )
                        ],
                        verbose_name="Время приготовления",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор рецепта",
                    ),
                ),
                (
                    "cart",
                    models.ManyToManyField(
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Список покупок",
                    ),
                ),
                (
                    "favorite",
                    models.ManyToManyField(
                        related_name="favorites",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Понравившиеся рецепты",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        related_name="recipes",
                        through="recipes.AmountIngredient",
                        to="recipes.ingredient",
                        verbose_name="Ингредиенты блюда",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="recipes", to="recipes.tag", verbose_name="Тег"
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ("-pub_date",),
            },
        ),
        migrations.AddField(
            model_name="amountingredient",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient",
                to="recipes.recipe",
                verbose_name="В каких рецептах",
            ),
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.UniqueConstraint(
                fields=("name", "author"), name="unique_for_author"
            ),
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gt", 0)), name="name_empty"
            ),
        ),
        migrations.AddConstraint(
            model_name="amountingredient",
            constraint=models.UniqueConstraint(
                fields=("recipe", "ingredients"), name="unique_recipe_ingredients"
            ),
        ),
    ]
